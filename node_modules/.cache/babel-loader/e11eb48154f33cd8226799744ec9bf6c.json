{"ast":null,"code":"import _objectSpread from\"D:\\\\projects\\\\developement\\\\games\\\\react\\\\to-do-list\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";import _slicedToArray from\"D:\\\\projects\\\\developement\\\\games\\\\react\\\\to-do-list\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import Button from\"./Button\";import{FaCheck}from\"react-icons/fa\";import{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Form=function Form(_ref){var newTask=_ref.newTask;var newCheck=document.querySelector('.check-icon');var onSubmit=function onSubmit(e){e.preventDefault();if(!newTaskContent.text||!newTaskContent.date){alert('please fill all the fields');}else{console.log(newTaskContent);newTask(newTaskContent);setNewTask({text:'',date:'',reminder:false});newCheck.classList.remove('active');}};var _useState=useState({text:'',date:'',reminder:false}),_useState2=_slicedToArray(_useState,2),newTaskContent=_useState2[0],setNewTask=_useState2[1];var isChecked=function isChecked(){newCheck.classList.toggle('active');if(newCheck.classList.contains('active')){setNewTask(_objectSpread(_objectSpread({},newTaskContent),{},{reminder:true}));}else{setNewTask(_objectSpread(_objectSpread({},newTaskContent),{},{reminder:false}));}};return/*#__PURE__*/_jsxs(\"form\",{className:\"passive\",onSubmit:onSubmit,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"task\",children:\"Task\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Add Task\",id:\"task\",value:newTaskContent.text,onChange:function onChange(e){return setNewTask(_objectSpread(_objectSpread({},newTaskContent),{},{text:e.target.value}));}}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"date\",children:\"Day & Time\"}),/*#__PURE__*/_jsx(\"input\",{type:\"datetime\",id:\"date\",value:newTaskContent.date,onChange:function onChange(e){return setNewTask(_objectSpread(_objectSpread({},newTaskContent),{},{date:e.target.value}));}}),/*#__PURE__*/_jsxs(\"div\",{className:\"reminder\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"reminder\",children:\"Set Reminder\"}),/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:\"reminder\",checked:newTaskContent.reminder,value:newTaskContent.reminder,onChange:function onChange(e){return setNewTask(_objectSpread(_objectSpread({},newTaskContent),{},{reminder:e.currentTarget.checked}));}}),/*#__PURE__*/_jsx(\"span\",{className:\"check\",onClick:function onClick(){return isChecked();},children:/*#__PURE__*/_jsx(FaCheck,{className:\"check-icon\"})})]}),/*#__PURE__*/_jsx(Button,{})]});};export default Form;","map":{"version":3,"sources":["D:/projects/developement/games/react/to-do-list/src/components/Form.js"],"names":["Button","FaCheck","useState","Form","newTask","newCheck","document","querySelector","onSubmit","e","preventDefault","newTaskContent","text","date","alert","console","log","setNewTask","reminder","classList","remove","isChecked","toggle","contains","target","value","currentTarget","checked"],"mappings":"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","sourcesContent":["import Button from \"./Button\"\r\nimport { FaCheck } from \"react-icons/fa\"\r\nimport { useState } from \"react\"\r\n\r\nconst Form = ({newTask}) => {\r\n\r\n    const newCheck = document.querySelector('.check-icon')\r\n\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        if(!newTaskContent.text || !newTaskContent.date){\r\n            alert('please fill all the fields')\r\n        }else{\r\n            console.log(newTaskContent)\r\n            newTask(newTaskContent)\r\n            setNewTask({\r\n                text : '',\r\n                date : '',\r\n                reminder : false,\r\n            })\r\n            newCheck.classList.remove('active')\r\n        }\r\n    }\r\n    const [newTaskContent,setNewTask] = useState({\r\n        text : '',\r\n        date : '',\r\n        reminder : false,\r\n    })\r\n    const isChecked = () => {\r\n        newCheck.classList.toggle('active')\r\n        if (newCheck.classList.contains('active')) {\r\n            setNewTask({...newTaskContent,reminder: true})\r\n        }else{\r\n            setNewTask({...newTaskContent,reminder: false})\r\n        }\r\n    }\r\n    return (\r\n        <form className=\"passive\" onSubmit={onSubmit}>\r\n            <label htmlFor='task'>Task</label>\r\n            <input type='text' placeholder='Add Task' id='task' value={newTaskContent.text} onChange={ (e) => setNewTask({...newTaskContent,text: e.target.value})}/>\r\n            <label htmlFor='date'>Day & Time</label>\r\n            <input type='datetime'  id='date' value={newTaskContent.date} onChange={ (e) => setNewTask({...newTaskContent,date: e.target.value})}/>\r\n            <div className=\"reminder\">\r\n                <label htmlFor='reminder'>Set Reminder</label>\r\n                <input type='checkbox' id='reminder' checked={newTaskContent.reminder} value={newTaskContent.reminder} onChange={ (e ) => setNewTask({...newTaskContent,reminder: e.currentTarget.checked})}/>\r\n                <span className=\"check\" onClick={() => isChecked()}><FaCheck className=\"check-icon\" /></span>\r\n            </div>\r\n            <Button  />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form"]},"metadata":{},"sourceType":"module"}